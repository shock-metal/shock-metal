# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CD and Release

on:
  push:
    branches: [ 1.18.x ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build

    - name: Upload Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: "modJar"
        path: lib/build
        retention-days: 7

  publish-release:
    runs-on: ubuntu-latest
    
    needs: [build]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Artifact
      uses: actions/download-artifact@v2.1.0
      with:
        name: "modJar"
        path: ./artifacts
    
    - name: Read Props
      uses: madhead/read-java-properties@latest
      id: props
      with:
        file: gradle.properties
        all: true
    
    - name: Create changelog text
      id: changelog
      uses: loopwerk/tag-changelog@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        exclude_types: other,doc,chore
         
    - name: Create Release
      uses: actions/create-release@v1
      continue-on-error: true
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: "Version ${{ steps.props.mc_version }}-${{ steps.props.mod_version }}"
        tag_name: ${{ steps.props.mc_version }}-${{ steps.props.mod_version }}
        body_path: ${{ steps.changelog.outputs.changes }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Add JAR to release
      if: steps.create_release.outcome == 'success'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/shockmetal-${{ steps.props.mc_version }}-${{ steps.props.mod_version }}.jar
        asset_name: shockmetal-${{ steps.props.mc_version }}-${{ steps.props.mod_version }}
        asset_content_type: application/octet-stream
